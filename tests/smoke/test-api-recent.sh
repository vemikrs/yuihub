#!/bin/bash
# YuiHub API ÊúÄËøë„ÅÆ„Éé„Éº„ÉàÂèñÂæó „Çπ„É¢„Éº„ÇØ„ÉÜ„Çπ„Éà

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
API_BASE="http://localhost:3000"

echo "üìã YuiHub API Recent Notes Test"
echo "==============================="
echo

# Âü∫Êú¨ÁöÑ„Å™ÊúÄËøë„ÅÆ„Éé„Éº„ÉàÂèñÂæó
echo "üì° Testing recent endpoint with default limit..."
RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" "$API_BASE/recent")
HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
RESPONSE_BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS:.*//g')

if [ "$HTTP_STATUS" -ne 200 ]; then
    echo "‚ùå FAIL: Recent endpoint returned HTTP $HTTP_STATUS"
    exit 1
fi

# JSON„É¨„Çπ„Éù„É≥„Çπ„ÅÆÊ§úË®º
echo "$RESPONSE_BODY" | python3 -m json.tool > /dev/null
if [ $? -ne 0 ]; then
    echo "‚ùå FAIL: Invalid JSON response"
    exit 1
fi

# „É¨„Çπ„Éù„É≥„ÇπÊßãÈÄ†„ÅÆÊ§úË®º
ITEMS_FIELD=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); print('true' if 'items' in data else 'false')")
if [ "$ITEMS_FIELD" != "true" ]; then
    echo "‚ùå FAIL: 'items' field is missing"
    exit 1
fi

ITEM_COUNT=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); print(len(data.get('items', [])))")
echo "‚úÖ PASS: Recent notes (default limit) successful"
echo "   Status: HTTP $HTTP_STATUS"
echo "   Item Count: $ITEM_COUNT"

# Âà∂ÈôêÊï∞ÊåáÂÆö„ÉÜ„Çπ„Éà
echo
echo "üì° Testing recent endpoint with custom limit..."
RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" "$API_BASE/recent?n=3")
HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
RESPONSE_BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS:.*//g')

if [ "$HTTP_STATUS" -ne 200 ]; then
    echo "‚ùå FAIL: Recent endpoint with limit returned HTTP $HTTP_STATUS"
    exit 1
fi

ITEM_COUNT=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); print(len(data.get('items', [])))")
if [ "$ITEM_COUNT" -gt 3 ]; then
    echo "‚ùå FAIL: Limit parameter not respected (got $ITEM_COUNT items, expected <= 3)"
    exit 1
fi

echo "‚úÖ PASS: Recent notes with limit successful"
echo "   Status: HTTP $HTTP_STATUS"
echo "   Item Count: $ITEM_COUNT"

# „Ç¢„Ç§„ÉÜ„É†ÊßãÈÄ†„ÅÆÊ§úË®ºÔºà1„Å§‰ª•‰∏ä„ÅÆ„Ç¢„Ç§„ÉÜ„É†„Åå„ÅÇ„ÇãÂ†¥ÂêàÔºâ
if [ "$ITEM_COUNT" -gt 0 ]; then
    echo
    echo "üì° Testing item structure..."
    
    # ÂøÖÈ†à„Éï„Ç£„Éº„É´„Éâ„ÅÆÁ¢∫Ë™ç
    FIRST_ITEM_ID=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); items=data.get('items', []); print(items[0].get('id', '') if items else '')")
    FIRST_ITEM_TITLE=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); items=data.get('items', []); print(items[0].get('title', '') if items else '')")
    FIRST_ITEM_PATH=$(echo "$RESPONSE_BODY" | python3 -c "import json, sys; data=json.load(sys.stdin); items=data.get('items', []); print(items[0].get('path', '') if items else '')")
    
    if [ -z "$FIRST_ITEM_ID" ] || [ -z "$FIRST_ITEM_TITLE" ] || [ -z "$FIRST_ITEM_PATH" ]; then
        echo "‚ùå FAIL: Missing required fields in item structure"
        exit 1
    fi
    
    echo "‚úÖ PASS: Item structure validation successful"
    echo "   Sample ID: $FIRST_ITEM_ID"
    echo "   Sample Title: $FIRST_ITEM_TITLE"
fi

echo

exit 0